class Solution {
public:
void numberr(vector<int>& candidates, int target, vector<vector<int>> &ans,vector<int> &r,int i){
      if(target==0){
            ans.push_back(r);
            return;
        }
        // int i=0;
        while(i<candidates.size() && target-candidates[i]>=0){
            r.push_back(candidates[i]);
  numberr(candidates,target-candidates[i],ans,r,i);
             i++;
             r.pop_back();
        }
}
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
   
        sort(candidates.begin(),candidates.end());
        candidates.erase(unique(candidates.begin(),candidates.end()),candidates.end());
             vector<int>r;
        vector<vector<int>> ans;
        numberr(candidates,target,ans,r,0);
     
        return ans;


    }
};
