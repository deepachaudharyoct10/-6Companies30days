// 1 Approach 
class Solution {
public:
    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {
        int n= img.size();
        int m = img[0].size();
        vector<vector<int>>arr(n,vector<int>(m,0));

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){

                int dx[8]= {1,1,0,-1,-1,-1,0,1};
                int dy[8]= {0,-1,-1,-1,0,1,1,1};

                int count =1;
                int sum =img[i][j];
                for(int k=0;k<8;k++){
                    int newx= dx[k]+i;
                    int newy= dy[k]+j;

                    if((newx>=0 && newx<n) && (newy>=0 && newy<m)){
                        sum += img[newx][newy];
                        count++;
                    }
                }

                arr[i][j]= sum/count;

            }
        }

        return arr;
    }
};



// second approach 
class Solution {
public:
    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {
        int n = img.size();
        int m  = img[0].size();
        vector<int>temp(m);
        int topcorner =0;

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){

                int sum = img[i][j];
                int count =1;

                if(i+1<n){
                    sum += img[i+1][j];
                    count++;
                    if(j-1>=0){
                        sum += img[i+1][j-1];
                        count++;
                    }
                    if(j+1<m){
                        sum += img[i+1][j+1];
                        count++;
                    }
                }

                if(j+1<m){
                    sum += img[i][j+1];
                    count++;
                }

                if(i-1>=0){
                    sum += temp[j];
                    count++;
                    if(j+1<m){
                        sum += temp[j+1];
                        count++;
                    }
                    if(j-1>=0){
                        sum += topcorner;
                        count++;
                    }
                    
                }
                if(j-1>=0){
                    sum += temp[j-1];
                    count++;
                }

                if(i-1>=0){
                    topcorner = temp[j];
                }

                temp[j]= img[i][j];

                img[i][j]= sum/count;

            }
        }

        return img;
    }
};
