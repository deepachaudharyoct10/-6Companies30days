class Solution {
public:

    map<vector<int>,int>mp;
    int shoppingOffers(vector<int>& price, vector<vector<int>>& special, vector<int>& needs) {
        int n = price.size();

        int ans = 0;
        if(mp.count(needs)!=0){
            return mp[needs];
        }
        for(int i= 0;i<n;i++){
            ans += price[i]* needs[i];
        }

        for(int i=0;i<special.size();i++){
            int valid = true; 
            for(int j=0;j<n;j++){
                if(needs[j]<special[i][j]){
                    valid = false;
                    break;
                }
            }
                if(valid){
                    for(int j=0;j<n;j++){
                        needs[j] -= special[i][j];
                    }

                    int ans2= special[i].back() + shoppingOffers(price, special, needs);

                    ans = min(ans, ans2);

                    for(int j=0;j<n;j++){
                        needs[j] += special[i][j];
                    }
                }
        }

        return  mp[needs] = ans;
    }
};
