class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        int n = nums.size();
        vector<int>dp(n,1);
        vector<int>index(n,-1);

        int maxi = 1;
        int idx= 0;

        sort(nums.begin(),nums.end());
        for(int i=1;i<n;i++){
            for(int j=0;j<i;j++){
                if(nums[i]%nums[j]==0){
                    if(dp[i]< dp[j]+1){
                    dp[i] = dp[j]+1;
                    index[i]= j;
                    }
                    if(maxi<dp[i]){
                        maxi = dp[i];
                        idx = i;

                    }
                    
                }

            }
        }

        vector<int>ans ;
        while(idx!=-1){
            ans.push_back(nums[idx]);
            idx= index[idx];
        }

        reverse(ans.begin(),ans.end());
        return ans;


    }
};
